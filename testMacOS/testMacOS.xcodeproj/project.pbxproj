// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 56;
	objects = {

/* Begin PBXBuildFile section */
		0606B7D32D637ABC00FE9548 /* 找所有字母异位词.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0606B7D22D637ABC00FE9548 /* 找所有字母异位词.swift */; };
		0606B7D52D63816700FE9548 /* 最长不重复子串第二版.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0606B7D42D63816700FE9548 /* 最长不重复子串第二版.swift */; };
		0606B7D72D64CB1A00FE9548 /* 将 x 减到 0 的最小操作数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0606B7D62D64CB1A00FE9548 /* 将 x 减到 0 的最小操作数.swift */; };
		0606B7D92D6CB5B200FE9548 /* 替换后的最长重复字符.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0606B7D82D6CB5B200FE9548 /* 替换后的最长重复字符.swift */; };
		0606B7DB2D6CBF8F00FE9548 /* 存在重复元素2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0606B7DA2D6CBF8F00FE9548 /* 存在重复元素2.swift */; };
		0606B7DD2D6E0BDA00FE9548 /* 存在重复元素3.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0606B7DC2D6E0BDA00FE9548 /* 存在重复元素3.swift */; };
		0606B7DF2D732E4A00FE9548 /* 填充节点的右侧指针.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0606B7DE2D732E4A00FE9548 /* 填充节点的右侧指针.swift */; };
		0606B7E12D733BDA00FE9548 /* 二叉树展开为链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0606B7E02D733BDA00FE9548 /* 二叉树展开为链表.swift */; };
		0616EC8B2BB42CB600D35872 /* 螺旋矩阵.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC8A2BB42CB600D35872 /* 螺旋矩阵.swift */; };
		0616EC8E2BB5003D00D35872 /* K个一组反转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC8D2BB5003D00D35872 /* K个一组反转链表.swift */; };
		0616EC902BB5007E00D35872 /* LRU缓存.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC8F2BB5007E00D35872 /* LRU缓存.swift */; };
		0616EC922BB500EE00D35872 /* 最大子数组合.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC912BB500EE00D35872 /* 最大子数组合.swift */; };
		0616EC942BB501B200D35872 /* 反转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC932BB501B200D35872 /* 反转链表.swift */; };
		0616EC962BB5024700D35872 /* 环形链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC952BB5024700D35872 /* 环形链表.swift */; };
		0616EC982BB502B700D35872 /* 相交链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC972BB502B700D35872 /* 相交链表.swift */; };
		0616EC9A2BB515D400D35872 /* 字符串相加.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC992BB515D400D35872 /* 字符串相加.swift */; };
		0616EC9C2BB51D5900D35872 /* 最长递增子序列-动态规划.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC9B2BB51D5900D35872 /* 最长递增子序列-动态规划.swift */; };
		0616EC9E2BB55B7B00D35872 /* 接雨水.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC9D2BB55B7B00D35872 /* 接雨水.swift */; };
		0616ECA02BB5630300D35872 /* 重排链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616EC9F2BB5630300D35872 /* 重排链表.swift */; };
		0616ECA22BB5746B00D35872 /* 环形链表2-环节点入口.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616ECA12BB5746B00D35872 /* 环形链表2-环节点入口.swift */; };
		0616ECA42BB57BA600D35872 /* 合并区间.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616ECA32BB57BA500D35872 /* 合并区间.swift */; };
		0616ECA62BB651CD00D35872 /* 二叉树中的最大路径合.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616ECA52BB651CD00D35872 /* 二叉树中的最大路径合.swift */; };
		0616ECA82BB656E100D35872 /* 删除链表的倒数第K个节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616ECA72BB656E100D35872 /* 删除链表的倒数第K个节点.swift */; };
		0616ECAA2BB659F200D35872 /* 编辑距离.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616ECA92BB659F200D35872 /* 编辑距离.swift */; };
		0616ECAC2BB6605100D35872 /* 复原IP地址.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616ECAB2BB6605100D35872 /* 复原IP地址.swift */; };
		0616ECAE2BB673A300D35872 /* 二叉树的中序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616ECAD2BB673A300D35872 /* 二叉树的中序遍历.swift */; };
		0616F4D82BB4470F005791F0 /* 岛屿数量.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4D42BB4470F005791F0 /* 岛屿数量.swift */; };
		0616F4DA2BB4470F005791F0 /* 排序.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4D62BB4470F005791F0 /* 排序.swift */; };
		0616F4DC2BB448E5005791F0 /* 合并K个排序链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4DB2BB448E5005791F0 /* 合并K个排序链表.swift */; };
		0616F4DE2BB455B6005791F0 /* 三数之和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4DD2BB455B6005791F0 /* 三数之和.swift */; };
		0616F4E02BB7B258005791F0 /* 寻找两个正序数组的中位数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4DF2BB7B258005791F0 /* 寻找两个正序数组的中位数.swift */; };
		0616F4E22BB822EA005791F0 /* 下一个排列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4E12BB822EA005791F0 /* 下一个排列.swift */; };
		0616F4E42BB82371005791F0 /* 爬楼梯.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4E32BB82371005791F0 /* 爬楼梯.swift */; };
		0616F4E62BB8261E005791F0 /* x的算数平方根.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4E52BB8261E005791F0 /* x的算数平方根.swift */; };
		0616F4E82BB8F5BB005791F0 /* 两数相加.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4E72BB8F5BB005791F0 /* 两数相加.swift */; };
		0616F4EA2BB8FCF2005791F0 /* 字符串转换整数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4E92BB8FCF2005791F0 /* 字符串转换整数.swift */; };
		0616F4EC2BB90479005791F0 /* 括号生成.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4EB2BB90479005791F0 /* 括号生成.swift */; };
		0616F4EE2BB96684005791F0 /* 滑动窗口的最大值.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0616F4ED2BB96684005791F0 /* 滑动窗口的最大值.swift */; };
		06171DA22D7AA31D000910ED /* 排序练习.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06171DA12D7AA31D000910ED /* 排序练习.swift */; };
		0619DFB22D84174600075E8D /* 完全平方数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0619DFB12D84174600075E8D /* 完全平方数.swift */; };
		061A5EBE2BB6A04D00B52B66 /* 最长公共子序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 061A5EBD2BB6A04D00B52B66 /* 最长公共子序列.swift */; };
		061A5EC02BB6AAF700B52B66 /* 删除排序链表中的重复元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 061A5EBF2BB6AAF700B52B66 /* 删除排序链表中的重复元素.swift */; };
		06226A952BBBF32D00C2F716 /* 正则表达式匹配.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06226A942BBBF32D00C2F716 /* 正则表达式匹配.swift */; };
		06226A972BBBFFE500C2F716 /* 在排序数组中找元素的第一个位置和最后一个位置.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06226A962BBBFFE500C2F716 /* 在排序数组中找元素的第一个位置和最后一个位置.swift */; };
		06226A992BBC051B00C2F716 /* 组合总数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06226A982BBC051B00C2F716 /* 组合总数.swift */; };
		06226A9B2BBC0AC300C2F716 /* 旋转图像.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06226A9A2BBC0AC300C2F716 /* 旋转图像.swift */; };
		06226A9D2BBC0ED400C2F716 /* 字母异位词分组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06226A9C2BBC0ED400C2F716 /* 字母异位词分组.swift */; };
		06226A9F2BBC152200C2F716 /* 跳跃游戏.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06226A9E2BBC152200C2F716 /* 跳跃游戏.swift */; };
		06250BD82D54C9690015A222 /* 单链表的分解.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06250BD72D54C9690015A222 /* 单链表的分解.swift */; };
		06250BDD2D55E74B0015A222 /* 从未排序的链表中移除重复元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06250BDC2D55E74B0015A222 /* 从未排序的链表中移除重复元素.swift */; };
		064DBC2C2BBB96B600DEB51E /* 不同的二叉搜索树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 064DBC2B2BBB96B600DEB51E /* 不同的二叉搜索树.swift */; };
		064DBC2E2BBBA6ED00DEB51E /* 不同的二叉搜索树2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 064DBC2D2BBBA6ED00DEB51E /* 不同的二叉搜索树2.swift */; };
		064DBC302BBBAAED00DEB51E /* 盛最多水的容器.swift in Sources */ = {isa = PBXBuildFile; fileRef = 064DBC2F2BBBAAED00DEB51E /* 盛最多水的容器.swift */; };
		064DBC322BBBB27600DEB51E /* 电话号码的数字组合.swift in Sources */ = {isa = PBXBuildFile; fileRef = 064DBC312BBBB27600DEB51E /* 电话号码的数字组合.swift */; };
		06524B1D2D8A680300754D9E /* 最长连续递增序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06524B1C2D8A680300754D9E /* 最长连续递增序列.swift */; };
		0662BDD52D5AEF9800B6EE2F /* 螺旋矩阵2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0662BDD42D5AEF9800B6EE2F /* 螺旋矩阵2.swift */; };
		066DB9712D9148A90003BACC /* 临时算法文件.swift in Sources */ = {isa = PBXBuildFile; fileRef = 066DB9702D9148A90003BACC /* 临时算法文件.swift */; };
		066DB9732D91607B0003BACC /* 奇偶链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 066DB9722D91607B0003BACC /* 奇偶链表.swift */; };
		0671D1A72D6F3FE6001B2E72 /* 长度最小的子数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0671D1A62D6F3FE6001B2E72 /* 长度最小的子数组.swift */; };
		0671D1A92D6F45FD001B2E72 /* 至少有 K 个重复字符的最长子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 0671D1A82D6F45FD001B2E72 /* 至少有 K 个重复字符的最长子串.swift */; };
		067A6A932BB2D03400CBADBF /* 买卖股票的最佳时机.swift in Sources */ = {isa = PBXBuildFile; fileRef = 067A6A922BB2D03400CBADBF /* 买卖股票的最佳时机.swift */; };
		067AD2FE2D65EA3B00EA7BB8 /* 最大连续1的个数 III.swift in Sources */ = {isa = PBXBuildFile; fileRef = 067AD2FD2D65EA3B00EA7BB8 /* 最大连续1的个数 III.swift */; };
		067D690B2D5EF14300965852 /* 字符串的排列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 067D690A2D5EF14300965852 /* 字符串的排列.swift */; };
		06816CE52BB6BE6C008F0519 /* 二叉树的右视图.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06816CE42BB6BE6C008F0519 /* 二叉树的右视图.swift */; };
		0689BAAC2D40FB380056013F /* 数组增删改查O(1).swift in Sources */ = {isa = PBXBuildFile; fileRef = 0689BAAB2D40FB380056013F /* 数组增删改查O(1).swift */; };
		068B6E6E2BBAC5CD00404599 /* Z字形变换.swift in Sources */ = {isa = PBXBuildFile; fileRef = 068B6E6D2BBAC5CD00404599 /* Z字形变换.swift */; };
		06A6C5F52BB2F61100BDDB53 /* 最长不重复子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06A6C5F42BB2F61100BDDB53 /* 最长不重复子串.swift */; };
		06A70EE82D94F5B500C13B60 /* 对称二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06A70EE72D94F5B500C13B60 /* 对称二叉树.swift */; };
		06A70EEA2D94FB1400C13B60 /* 二叉树镜像.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06A70EE92D94FB1400C13B60 /* 二叉树镜像.swift */; };
		06A70EEC2D9503D000C13B60 /* 二叉树的深度.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06A70EEB2D9503D000C13B60 /* 二叉树的深度.swift */; };
		06B247C02BB1A786001C9F6B /* TreeLevelOrder.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06B247BF2BB1A786001C9F6B /* TreeLevelOrder.swift */; };
		06B247C22BB2631C001C9F6B /* 搜索旋转排序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06B247C12BB2631C001C9F6B /* 搜索旋转排序数组.swift */; };
		06C6C2962BB158230069AF70 /* 合并两个有序链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06C6C2952BB158230069AF70 /* 合并两个有序链表.swift */; };
		06C6C2982BB15B680069AF70 /* TwoSum.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06C6C2972BB15B680069AF70 /* TwoSum.swift */; };
		06C6C29A2BB16DE90069AF70 /* 最长回文子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06C6C2992BB16DE90069AF70 /* 最长回文子串.swift */; };
		06D4B5782D70463E002109A8 /* labuladong二叉树基础.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06D4B5772D70463E002109A8 /* labuladong二叉树基础.swift */; };
		06DE18E72D75587F0046EF2C /* 最大二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06DE18E62D75587F0046EF2C /* 最大二叉树.swift */; };
		06DE18E92D755D5B0046EF2C /* 通过前序以及中序构建二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06DE18E82D755D5B0046EF2C /* 通过前序以及中序构建二叉树.swift */; };
		06DE18EB2D7589440046EF2C /* 通过中序和后续构建二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06DE18EA2D7589440046EF2C /* 通过中序和后续构建二叉树.swift */; };
		06DE18ED2D7597200046EF2C /* 通过前序和后续构建二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06DE18EC2D7597200046EF2C /* 通过前序和后续构建二叉树.swift */; };
		06DE18EF2D75AA810046EF2C /* 二叉树的序列化和反序列化.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06DE18EE2D75AA810046EF2C /* 二叉树的序列化和反序列化.swift */; };
		06DE18F12D75D63D0046EF2C /* 二叉树前序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06DE18F02D75D63D0046EF2C /* 二叉树前序遍历.swift */; };
		06EDAA362BABC74900BCC224 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06EDAA352BABC74900BCC224 /* main.swift */; };
		06EDAA3D2BAC190100BCC224 /* Sort.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06EDAA3C2BAC190100BCC224 /* Sort.swift */; };
		06F2F1662BB6BF7100B6D830 /* 二分查找.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06F2F1652BB6BF7100B6D830 /* 二分查找.swift */; };
		06F2F1682BB6CCB000B6D830 /* 用栈实现队列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06F2F1672BB6CCAF00B6D830 /* 用栈实现队列.swift */; };
		06FC2D832BB3B7F900B15E28 /* 有效的括号.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06FC2D822BB3B7F900B15E28 /* 有效的括号.swift */; };
		06FC2D852BB3BAD300B15E28 /* 二叉树最近公共祖先.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06FC2D842BB3BAD300B15E28 /* 二叉树最近公共祖先.swift */; };
		06FC2D872BB3C5CA00B15E28 /* 合并两个有序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06FC2D862BB3C5CA00B15E28 /* 合并两个有序数组.swift */; };
		06FC2D892BB3D05B00B15E28 /* 全排列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06FC2D882BB3D05B00B15E28 /* 全排列.swift */; };
		06FC2D8B2BB3F7AB00B15E28 /* 二叉树的锯齿形层序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06FC2D8A2BB3F7AB00B15E28 /* 二叉树的锯齿形层序遍历.swift */; };
		06FC2D8D2BB40E0A00B15E28 /* 翻转链表2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06FC2D8C2BB40E0A00B15E28 /* 翻转链表2.swift */; };
		06FE357C2D5A434A00ABB1E8 /* 删除有序数组中的重复项.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06FE357B2D5A434A00ABB1E8 /* 删除有序数组中的重复项.swift */; };
		06FE357E2D5A4B6C00ABB1E8 /* 最小覆盖子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 06FE357D2D5A4B6C00ABB1E8 /* 最小覆盖子串.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		06EDAA302BABC74900BCC224 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		0606B7D22D637ABC00FE9548 /* 找所有字母异位词.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "找所有字母异位词.swift"; sourceTree = "<group>"; };
		0606B7D42D63816700FE9548 /* 最长不重复子串第二版.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最长不重复子串第二版.swift"; sourceTree = "<group>"; };
		0606B7D62D64CB1A00FE9548 /* 将 x 减到 0 的最小操作数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "将 x 减到 0 的最小操作数.swift"; sourceTree = "<group>"; };
		0606B7D82D6CB5B200FE9548 /* 替换后的最长重复字符.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "替换后的最长重复字符.swift"; sourceTree = "<group>"; };
		0606B7DA2D6CBF8F00FE9548 /* 存在重复元素2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "存在重复元素2.swift"; sourceTree = "<group>"; };
		0606B7DC2D6E0BDA00FE9548 /* 存在重复元素3.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "存在重复元素3.swift"; sourceTree = "<group>"; };
		0606B7DE2D732E4A00FE9548 /* 填充节点的右侧指针.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "填充节点的右侧指针.swift"; sourceTree = "<group>"; };
		0606B7E02D733BDA00FE9548 /* 二叉树展开为链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树展开为链表.swift"; sourceTree = "<group>"; };
		0616EC8A2BB42CB600D35872 /* 螺旋矩阵.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "螺旋矩阵.swift"; sourceTree = "<group>"; };
		0616EC8D2BB5003D00D35872 /* K个一组反转链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "K个一组反转链表.swift"; sourceTree = "<group>"; };
		0616EC8F2BB5007E00D35872 /* LRU缓存.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "LRU缓存.swift"; sourceTree = "<group>"; };
		0616EC912BB500EE00D35872 /* 最大子数组合.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最大子数组合.swift"; sourceTree = "<group>"; };
		0616EC932BB501B200D35872 /* 反转链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "反转链表.swift"; sourceTree = "<group>"; };
		0616EC952BB5024700D35872 /* 环形链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "环形链表.swift"; sourceTree = "<group>"; };
		0616EC972BB502B700D35872 /* 相交链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "相交链表.swift"; sourceTree = "<group>"; };
		0616EC992BB515D400D35872 /* 字符串相加.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "字符串相加.swift"; sourceTree = "<group>"; };
		0616EC9B2BB51D5900D35872 /* 最长递增子序列-动态规划.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最长递增子序列-动态规划.swift"; sourceTree = "<group>"; };
		0616EC9D2BB55B7B00D35872 /* 接雨水.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "接雨水.swift"; sourceTree = "<group>"; };
		0616EC9F2BB5630300D35872 /* 重排链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "重排链表.swift"; sourceTree = "<group>"; };
		0616ECA12BB5746B00D35872 /* 环形链表2-环节点入口.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "环形链表2-环节点入口.swift"; sourceTree = "<group>"; };
		0616ECA32BB57BA500D35872 /* 合并区间.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "合并区间.swift"; sourceTree = "<group>"; };
		0616ECA52BB651CD00D35872 /* 二叉树中的最大路径合.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树中的最大路径合.swift"; sourceTree = "<group>"; };
		0616ECA72BB656E100D35872 /* 删除链表的倒数第K个节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "删除链表的倒数第K个节点.swift"; sourceTree = "<group>"; };
		0616ECA92BB659F200D35872 /* 编辑距离.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "编辑距离.swift"; sourceTree = "<group>"; };
		0616ECAB2BB6605100D35872 /* 复原IP地址.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "复原IP地址.swift"; sourceTree = "<group>"; };
		0616ECAD2BB673A300D35872 /* 二叉树的中序遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树的中序遍历.swift"; sourceTree = "<group>"; };
		0616F4D42BB4470F005791F0 /* 岛屿数量.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "岛屿数量.swift"; sourceTree = "<group>"; };
		0616F4D62BB4470F005791F0 /* 排序.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "排序.swift"; sourceTree = "<group>"; };
		0616F4DB2BB448E5005791F0 /* 合并K个排序链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "合并K个排序链表.swift"; sourceTree = "<group>"; };
		0616F4DD2BB455B6005791F0 /* 三数之和.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "三数之和.swift"; sourceTree = "<group>"; };
		0616F4DF2BB7B258005791F0 /* 寻找两个正序数组的中位数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "寻找两个正序数组的中位数.swift"; sourceTree = "<group>"; };
		0616F4E12BB822EA005791F0 /* 下一个排列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "下一个排列.swift"; sourceTree = "<group>"; };
		0616F4E32BB82371005791F0 /* 爬楼梯.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "爬楼梯.swift"; sourceTree = "<group>"; };
		0616F4E52BB8261E005791F0 /* x的算数平方根.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "x的算数平方根.swift"; sourceTree = "<group>"; };
		0616F4E72BB8F5BB005791F0 /* 两数相加.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "两数相加.swift"; sourceTree = "<group>"; };
		0616F4E92BB8FCF2005791F0 /* 字符串转换整数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "字符串转换整数.swift"; sourceTree = "<group>"; };
		0616F4EB2BB90479005791F0 /* 括号生成.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "括号生成.swift"; sourceTree = "<group>"; };
		0616F4ED2BB96684005791F0 /* 滑动窗口的最大值.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "滑动窗口的最大值.swift"; sourceTree = "<group>"; };
		06171DA12D7AA31D000910ED /* 排序练习.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "排序练习.swift"; sourceTree = "<group>"; };
		0619DFB12D84174600075E8D /* 完全平方数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "完全平方数.swift"; sourceTree = "<group>"; };
		061A5EBD2BB6A04D00B52B66 /* 最长公共子序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最长公共子序列.swift"; sourceTree = "<group>"; };
		061A5EBF2BB6AAF700B52B66 /* 删除排序链表中的重复元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "删除排序链表中的重复元素.swift"; sourceTree = "<group>"; };
		06226A942BBBF32D00C2F716 /* 正则表达式匹配.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "正则表达式匹配.swift"; sourceTree = "<group>"; };
		06226A962BBBFFE500C2F716 /* 在排序数组中找元素的第一个位置和最后一个位置.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "在排序数组中找元素的第一个位置和最后一个位置.swift"; sourceTree = "<group>"; };
		06226A982BBC051B00C2F716 /* 组合总数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "组合总数.swift"; sourceTree = "<group>"; };
		06226A9A2BBC0AC300C2F716 /* 旋转图像.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "旋转图像.swift"; sourceTree = "<group>"; };
		06226A9C2BBC0ED400C2F716 /* 字母异位词分组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "字母异位词分组.swift"; sourceTree = "<group>"; };
		06226A9E2BBC152200C2F716 /* 跳跃游戏.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "跳跃游戏.swift"; sourceTree = "<group>"; };
		06250BD72D54C9690015A222 /* 单链表的分解.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "单链表的分解.swift"; sourceTree = "<group>"; };
		06250BDC2D55E74B0015A222 /* 从未排序的链表中移除重复元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "从未排序的链表中移除重复元素.swift"; sourceTree = "<group>"; };
		064DBC2B2BBB96B600DEB51E /* 不同的二叉搜索树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "不同的二叉搜索树.swift"; sourceTree = "<group>"; };
		064DBC2D2BBBA6ED00DEB51E /* 不同的二叉搜索树2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "不同的二叉搜索树2.swift"; sourceTree = "<group>"; };
		064DBC2F2BBBAAED00DEB51E /* 盛最多水的容器.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "盛最多水的容器.swift"; sourceTree = "<group>"; };
		064DBC312BBBB27600DEB51E /* 电话号码的数字组合.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "电话号码的数字组合.swift"; sourceTree = "<group>"; };
		06524B1C2D8A680300754D9E /* 最长连续递增序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最长连续递增序列.swift"; sourceTree = "<group>"; };
		0662BDD42D5AEF9800B6EE2F /* 螺旋矩阵2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "螺旋矩阵2.swift"; sourceTree = "<group>"; };
		066DB9702D9148A90003BACC /* 临时算法文件.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "临时算法文件.swift"; sourceTree = "<group>"; };
		066DB9722D91607B0003BACC /* 奇偶链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "奇偶链表.swift"; sourceTree = "<group>"; };
		0671D1A62D6F3FE6001B2E72 /* 长度最小的子数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "长度最小的子数组.swift"; sourceTree = "<group>"; };
		0671D1A82D6F45FD001B2E72 /* 至少有 K 个重复字符的最长子串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "至少有 K 个重复字符的最长子串.swift"; sourceTree = "<group>"; };
		067A6A922BB2D03400CBADBF /* 买卖股票的最佳时机.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "买卖股票的最佳时机.swift"; sourceTree = "<group>"; };
		067AD2FD2D65EA3B00EA7BB8 /* 最大连续1的个数 III.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最大连续1的个数 III.swift"; sourceTree = "<group>"; };
		067D690A2D5EF14300965852 /* 字符串的排列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "字符串的排列.swift"; sourceTree = "<group>"; };
		06816CE42BB6BE6C008F0519 /* 二叉树的右视图.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树的右视图.swift"; sourceTree = "<group>"; };
		0689BAAB2D40FB380056013F /* 数组增删改查O(1).swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "数组增删改查O(1).swift"; sourceTree = "<group>"; };
		068B6E6D2BBAC5CD00404599 /* Z字形变换.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Z字形变换.swift"; sourceTree = "<group>"; };
		06A6C5F42BB2F61100BDDB53 /* 最长不重复子串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最长不重复子串.swift"; sourceTree = "<group>"; };
		06A70EE72D94F5B500C13B60 /* 对称二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "对称二叉树.swift"; sourceTree = "<group>"; };
		06A70EE92D94FB1400C13B60 /* 二叉树镜像.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树镜像.swift"; sourceTree = "<group>"; };
		06A70EEB2D9503D000C13B60 /* 二叉树的深度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树的深度.swift"; sourceTree = "<group>"; };
		06B247BF2BB1A786001C9F6B /* TreeLevelOrder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TreeLevelOrder.swift; sourceTree = "<group>"; };
		06B247C12BB2631C001C9F6B /* 搜索旋转排序数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "搜索旋转排序数组.swift"; sourceTree = "<group>"; };
		06C6C2952BB158230069AF70 /* 合并两个有序链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "合并两个有序链表.swift"; sourceTree = "<group>"; };
		06C6C2972BB15B680069AF70 /* TwoSum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TwoSum.swift; sourceTree = "<group>"; };
		06C6C2992BB16DE90069AF70 /* 最长回文子串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最长回文子串.swift"; sourceTree = "<group>"; };
		06D4B5772D70463E002109A8 /* labuladong二叉树基础.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "labuladong二叉树基础.swift"; sourceTree = "<group>"; };
		06DE18E62D75587F0046EF2C /* 最大二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最大二叉树.swift"; sourceTree = "<group>"; };
		06DE18E82D755D5B0046EF2C /* 通过前序以及中序构建二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "通过前序以及中序构建二叉树.swift"; sourceTree = "<group>"; };
		06DE18EA2D7589440046EF2C /* 通过中序和后续构建二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "通过中序和后续构建二叉树.swift"; sourceTree = "<group>"; };
		06DE18EC2D7597200046EF2C /* 通过前序和后续构建二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "通过前序和后续构建二叉树.swift"; sourceTree = "<group>"; };
		06DE18EE2D75AA810046EF2C /* 二叉树的序列化和反序列化.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树的序列化和反序列化.swift"; sourceTree = "<group>"; };
		06DE18F02D75D63D0046EF2C /* 二叉树前序遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树前序遍历.swift"; sourceTree = "<group>"; };
		06EDAA322BABC74900BCC224 /* testMacOS */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = testMacOS; sourceTree = BUILT_PRODUCTS_DIR; };
		06EDAA352BABC74900BCC224 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		06EDAA3C2BAC190100BCC224 /* Sort.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Sort.swift; sourceTree = "<group>"; };
		06F2F1652BB6BF7100B6D830 /* 二分查找.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二分查找.swift"; sourceTree = "<group>"; };
		06F2F1672BB6CCAF00B6D830 /* 用栈实现队列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "用栈实现队列.swift"; sourceTree = "<group>"; };
		06FC2D822BB3B7F900B15E28 /* 有效的括号.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "有效的括号.swift"; sourceTree = "<group>"; };
		06FC2D842BB3BAD300B15E28 /* 二叉树最近公共祖先.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树最近公共祖先.swift"; sourceTree = "<group>"; };
		06FC2D862BB3C5CA00B15E28 /* 合并两个有序数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "合并两个有序数组.swift"; sourceTree = "<group>"; };
		06FC2D882BB3D05B00B15E28 /* 全排列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "全排列.swift"; sourceTree = "<group>"; };
		06FC2D8A2BB3F7AB00B15E28 /* 二叉树的锯齿形层序遍历.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "二叉树的锯齿形层序遍历.swift"; sourceTree = "<group>"; };
		06FC2D8C2BB40E0A00B15E28 /* 翻转链表2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "翻转链表2.swift"; sourceTree = "<group>"; };
		06FE357B2D5A434A00ABB1E8 /* 删除有序数组中的重复项.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "删除有序数组中的重复项.swift"; sourceTree = "<group>"; };
		06FE357D2D5A4B6C00ABB1E8 /* 最小覆盖子串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "最小覆盖子串.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		06EDAA2F2BABC74900BCC224 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		06250BD92D55E48C0015A222 /* 链表 */ = {
			isa = PBXGroup;
			children = (
				0616EC932BB501B200D35872 /* 反转链表.swift */,
				06C6C2952BB158230069AF70 /* 合并两个有序链表.swift */,
				0616EC952BB5024700D35872 /* 环形链表.swift */,
				0616F4DB2BB448E5005791F0 /* 合并K个排序链表.swift */,
				0616EC972BB502B700D35872 /* 相交链表.swift */,
				0616EC9F2BB5630300D35872 /* 重排链表.swift */,
				0616ECA72BB656E100D35872 /* 删除链表的倒数第K个节点.swift */,
				0616ECA12BB5746B00D35872 /* 环形链表2-环节点入口.swift */,
				061A5EBF2BB6AAF700B52B66 /* 删除排序链表中的重复元素.swift */,
			);
			path = "链表";
			sourceTree = "<group>";
		};
		06250BDB2D55E6C70015A222 /* 树 */ = {
			isa = PBXGroup;
			children = (
				06FC2D842BB3BAD300B15E28 /* 二叉树最近公共祖先.swift */,
			);
			path = "树";
			sourceTree = "<group>";
		};
		0689BAA72D40FAB90056013F /* 2025 */ = {
			isa = PBXGroup;
			children = (
				0689BAAB2D40FB380056013F /* 数组增删改查O(1).swift */,
				06250BD72D54C9690015A222 /* 单链表的分解.swift */,
				06250BDC2D55E74B0015A222 /* 从未排序的链表中移除重复元素.swift */,
				0662BDD42D5AEF9800B6EE2F /* 螺旋矩阵2.swift */,
				06FE357B2D5A434A00ABB1E8 /* 删除有序数组中的重复项.swift */,
				06FE357D2D5A4B6C00ABB1E8 /* 最小覆盖子串.swift */,
				067D690A2D5EF14300965852 /* 字符串的排列.swift */,
				067AD2FD2D65EA3B00EA7BB8 /* 最大连续1的个数 III.swift */,
				0606B7D22D637ABC00FE9548 /* 找所有字母异位词.swift */,
				0606B7D42D63816700FE9548 /* 最长不重复子串第二版.swift */,
				0606B7D62D64CB1A00FE9548 /* 将 x 减到 0 的最小操作数.swift */,
				0671D1A82D6F45FD001B2E72 /* 至少有 K 个重复字符的最长子串.swift */,
				0671D1A62D6F3FE6001B2E72 /* 长度最小的子数组.swift */,
				06D4B5772D70463E002109A8 /* labuladong二叉树基础.swift */,
				06DE18E62D75587F0046EF2C /* 最大二叉树.swift */,
				06DE18E82D755D5B0046EF2C /* 通过前序以及中序构建二叉树.swift */,
				06DE18EA2D7589440046EF2C /* 通过中序和后续构建二叉树.swift */,
				06DE18EC2D7597200046EF2C /* 通过前序和后续构建二叉树.swift */,
				06DE18EE2D75AA810046EF2C /* 二叉树的序列化和反序列化.swift */,
				0606B7D82D6CB5B200FE9548 /* 替换后的最长重复字符.swift */,
				0606B7DA2D6CBF8F00FE9548 /* 存在重复元素2.swift */,
				0606B7DC2D6E0BDA00FE9548 /* 存在重复元素3.swift */,
				0606B7DE2D732E4A00FE9548 /* 填充节点的右侧指针.swift */,
				0606B7E02D733BDA00FE9548 /* 二叉树展开为链表.swift */,
				06DE18F02D75D63D0046EF2C /* 二叉树前序遍历.swift */,
				06171DA12D7AA31D000910ED /* 排序练习.swift */,
				0619DFB12D84174600075E8D /* 完全平方数.swift */,
				06524B1C2D8A680300754D9E /* 最长连续递增序列.swift */,
				066DB9702D9148A90003BACC /* 临时算法文件.swift */,
				066DB9722D91607B0003BACC /* 奇偶链表.swift */,
				06A70EE72D94F5B500C13B60 /* 对称二叉树.swift */,
				06A70EE92D94FB1400C13B60 /* 二叉树镜像.swift */,
				06A70EEB2D9503D000C13B60 /* 二叉树的深度.swift */,
			);
			path = 2025;
			sourceTree = "<group>";
		};
		0689BAA82D40FAC50056013F /* 2024 */ = {
			isa = PBXGroup;
			children = (
				06250BDB2D55E6C70015A222 /* 树 */,
				06250BD92D55E48C0015A222 /* 链表 */,
				0616EC912BB500EE00D35872 /* 最大子数组合.swift */,
				06EDAA3C2BAC190100BCC224 /* Sort.swift */,
				06C6C2972BB15B680069AF70 /* TwoSum.swift */,
				06C6C2992BB16DE90069AF70 /* 最长回文子串.swift */,
				0616EC8D2BB5003D00D35872 /* K个一组反转链表.swift */,
				0616EC8F2BB5007E00D35872 /* LRU缓存.swift */,
				06B247BF2BB1A786001C9F6B /* TreeLevelOrder.swift */,
				06B247C12BB2631C001C9F6B /* 搜索旋转排序数组.swift */,
				0616F4D42BB4470F005791F0 /* 岛屿数量.swift */,
				0616F4D62BB4470F005791F0 /* 排序.swift */,
				067A6A922BB2D03400CBADBF /* 买卖股票的最佳时机.swift */,
				06A6C5F42BB2F61100BDDB53 /* 最长不重复子串.swift */,
				06FC2D822BB3B7F900B15E28 /* 有效的括号.swift */,
				0616F4DD2BB455B6005791F0 /* 三数之和.swift */,
				06FC2D862BB3C5CA00B15E28 /* 合并两个有序数组.swift */,
				06FC2D882BB3D05B00B15E28 /* 全排列.swift */,
				06FC2D8A2BB3F7AB00B15E28 /* 二叉树的锯齿形层序遍历.swift */,
				06FC2D8C2BB40E0A00B15E28 /* 翻转链表2.swift */,
				0616EC8A2BB42CB600D35872 /* 螺旋矩阵.swift */,
				0616EC992BB515D400D35872 /* 字符串相加.swift */,
				0616EC9B2BB51D5900D35872 /* 最长递增子序列-动态规划.swift */,
				0616EC9D2BB55B7B00D35872 /* 接雨水.swift */,
				0616ECA32BB57BA500D35872 /* 合并区间.swift */,
				0616ECA52BB651CD00D35872 /* 二叉树中的最大路径合.swift */,
				0616ECA92BB659F200D35872 /* 编辑距离.swift */,
				0616ECAB2BB6605100D35872 /* 复原IP地址.swift */,
				0616ECAD2BB673A300D35872 /* 二叉树的中序遍历.swift */,
				061A5EBD2BB6A04D00B52B66 /* 最长公共子序列.swift */,
				06816CE42BB6BE6C008F0519 /* 二叉树的右视图.swift */,
				06F2F1672BB6CCAF00B6D830 /* 用栈实现队列.swift */,
				06F2F1652BB6BF7100B6D830 /* 二分查找.swift */,
				0616F4DF2BB7B258005791F0 /* 寻找两个正序数组的中位数.swift */,
				068B6E6D2BBAC5CD00404599 /* Z字形变换.swift */,
				0616F4E12BB822EA005791F0 /* 下一个排列.swift */,
				0616F4E32BB82371005791F0 /* 爬楼梯.swift */,
				0616F4E52BB8261E005791F0 /* x的算数平方根.swift */,
				0616F4E72BB8F5BB005791F0 /* 两数相加.swift */,
				0616F4E92BB8FCF2005791F0 /* 字符串转换整数.swift */,
				0616F4EB2BB90479005791F0 /* 括号生成.swift */,
				0616F4ED2BB96684005791F0 /* 滑动窗口的最大值.swift */,
				064DBC2B2BBB96B600DEB51E /* 不同的二叉搜索树.swift */,
				064DBC2D2BBBA6ED00DEB51E /* 不同的二叉搜索树2.swift */,
				064DBC2F2BBBAAED00DEB51E /* 盛最多水的容器.swift */,
				064DBC312BBBB27600DEB51E /* 电话号码的数字组合.swift */,
				06226A942BBBF32D00C2F716 /* 正则表达式匹配.swift */,
				06226A962BBBFFE500C2F716 /* 在排序数组中找元素的第一个位置和最后一个位置.swift */,
				06226A982BBC051B00C2F716 /* 组合总数.swift */,
				06226A9A2BBC0AC300C2F716 /* 旋转图像.swift */,
				06226A9C2BBC0ED400C2F716 /* 字母异位词分组.swift */,
				06226A9E2BBC152200C2F716 /* 跳跃游戏.swift */,
			);
			path = 2024;
			sourceTree = "<group>";
		};
		06EDAA292BABC74900BCC224 = {
			isa = PBXGroup;
			children = (
				06EDAA342BABC74900BCC224 /* testMacOS */,
				06EDAA332BABC74900BCC224 /* Products */,
			);
			sourceTree = "<group>";
		};
		06EDAA332BABC74900BCC224 /* Products */ = {
			isa = PBXGroup;
			children = (
				06EDAA322BABC74900BCC224 /* testMacOS */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		06EDAA342BABC74900BCC224 /* testMacOS */ = {
			isa = PBXGroup;
			children = (
				0689BAA82D40FAC50056013F /* 2024 */,
				0689BAA72D40FAB90056013F /* 2025 */,
				06EDAA352BABC74900BCC224 /* main.swift */,
			);
			path = testMacOS;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		06EDAA312BABC74900BCC224 /* testMacOS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 06EDAA392BABC74900BCC224 /* Build configuration list for PBXNativeTarget "testMacOS" */;
			buildPhases = (
				06EDAA2E2BABC74900BCC224 /* Sources */,
				06EDAA2F2BABC74900BCC224 /* Frameworks */,
				06EDAA302BABC74900BCC224 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = testMacOS;
			productName = testMacOS;
			productReference = 06EDAA322BABC74900BCC224 /* testMacOS */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		06EDAA2A2BABC74900BCC224 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1430;
				LastUpgradeCheck = 1430;
				TargetAttributes = {
					06EDAA312BABC74900BCC224 = {
						CreatedOnToolsVersion = 14.3.1;
					};
				};
			};
			buildConfigurationList = 06EDAA2D2BABC74900BCC224 /* Build configuration list for PBXProject "testMacOS" */;
			compatibilityVersion = "Xcode 14.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 06EDAA292BABC74900BCC224;
			productRefGroup = 06EDAA332BABC74900BCC224 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				06EDAA312BABC74900BCC224 /* testMacOS */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		06EDAA2E2BABC74900BCC224 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				061A5EBE2BB6A04D00B52B66 /* 最长公共子序列.swift in Sources */,
				0606B7E12D733BDA00FE9548 /* 二叉树展开为链表.swift in Sources */,
				0662BDD52D5AEF9800B6EE2F /* 螺旋矩阵2.swift in Sources */,
				06816CE52BB6BE6C008F0519 /* 二叉树的右视图.swift in Sources */,
				0671D1A72D6F3FE6001B2E72 /* 长度最小的子数组.swift in Sources */,
				0606B7D72D64CB1A00FE9548 /* 将 x 减到 0 的最小操作数.swift in Sources */,
				066DB9732D91607B0003BACC /* 奇偶链表.swift in Sources */,
				06226A9B2BBC0AC300C2F716 /* 旋转图像.swift in Sources */,
				0616F4E42BB82371005791F0 /* 爬楼梯.swift in Sources */,
				0616F4E82BB8F5BB005791F0 /* 两数相加.swift in Sources */,
				06DE18EF2D75AA810046EF2C /* 二叉树的序列化和反序列化.swift in Sources */,
				0616EC902BB5007E00D35872 /* LRU缓存.swift in Sources */,
				06D4B5782D70463E002109A8 /* labuladong二叉树基础.swift in Sources */,
				0616F4DC2BB448E5005791F0 /* 合并K个排序链表.swift in Sources */,
				0616EC922BB500EE00D35872 /* 最大子数组合.swift in Sources */,
				0606B7DF2D732E4A00FE9548 /* 填充节点的右侧指针.swift in Sources */,
				067A6A932BB2D03400CBADBF /* 买卖股票的最佳时机.swift in Sources */,
				064DBC302BBBAAED00DEB51E /* 盛最多水的容器.swift in Sources */,
				0671D1A92D6F45FD001B2E72 /* 至少有 K 个重复字符的最长子串.swift in Sources */,
				067D690B2D5EF14300965852 /* 字符串的排列.swift in Sources */,
				0606B7D92D6CB5B200FE9548 /* 替换后的最长重复字符.swift in Sources */,
				0616ECA22BB5746B00D35872 /* 环形链表2-环节点入口.swift in Sources */,
				0616F4EA2BB8FCF2005791F0 /* 字符串转换整数.swift in Sources */,
				06FC2D872BB3C5CA00B15E28 /* 合并两个有序数组.swift in Sources */,
				0606B7D52D63816700FE9548 /* 最长不重复子串第二版.swift in Sources */,
				06C6C2962BB158230069AF70 /* 合并两个有序链表.swift in Sources */,
				06F2F1682BB6CCB000B6D830 /* 用栈实现队列.swift in Sources */,
				0616ECA02BB5630300D35872 /* 重排链表.swift in Sources */,
				06DE18F12D75D63D0046EF2C /* 二叉树前序遍历.swift in Sources */,
				06DE18E72D75587F0046EF2C /* 最大二叉树.swift in Sources */,
				06226A972BBBFFE500C2F716 /* 在排序数组中找元素的第一个位置和最后一个位置.swift in Sources */,
				064DBC2C2BBB96B600DEB51E /* 不同的二叉搜索树.swift in Sources */,
				0616EC962BB5024700D35872 /* 环形链表.swift in Sources */,
				06FC2D852BB3BAD300B15E28 /* 二叉树最近公共祖先.swift in Sources */,
				0616EC9A2BB515D400D35872 /* 字符串相加.swift in Sources */,
				0616EC8E2BB5003D00D35872 /* K个一组反转链表.swift in Sources */,
				0616ECAE2BB673A300D35872 /* 二叉树的中序遍历.swift in Sources */,
				061A5EC02BB6AAF700B52B66 /* 删除排序链表中的重复元素.swift in Sources */,
				0616F4DA2BB4470F005791F0 /* 排序.swift in Sources */,
				0616ECA62BB651CD00D35872 /* 二叉树中的最大路径合.swift in Sources */,
				06EDAA362BABC74900BCC224 /* main.swift in Sources */,
				0606B7D32D637ABC00FE9548 /* 找所有字母异位词.swift in Sources */,
				0616F4EE2BB96684005791F0 /* 滑动窗口的最大值.swift in Sources */,
				0616EC982BB502B700D35872 /* 相交链表.swift in Sources */,
				06226A992BBC051B00C2F716 /* 组合总数.swift in Sources */,
				06FC2D8D2BB40E0A00B15E28 /* 翻转链表2.swift in Sources */,
				0616ECA82BB656E100D35872 /* 删除链表的倒数第K个节点.swift in Sources */,
				064DBC322BBBB27600DEB51E /* 电话号码的数字组合.swift in Sources */,
				0606B7DB2D6CBF8F00FE9548 /* 存在重复元素2.swift in Sources */,
				06524B1D2D8A680300754D9E /* 最长连续递增序列.swift in Sources */,
				064DBC2E2BBBA6ED00DEB51E /* 不同的二叉搜索树2.swift in Sources */,
				067AD2FE2D65EA3B00EA7BB8 /* 最大连续1的个数 III.swift in Sources */,
				06FE357E2D5A4B6C00ABB1E8 /* 最小覆盖子串.swift in Sources */,
				0616F4E62BB8261E005791F0 /* x的算数平方根.swift in Sources */,
				06A70EEC2D9503D000C13B60 /* 二叉树的深度.swift in Sources */,
				0616ECAA2BB659F200D35872 /* 编辑距离.swift in Sources */,
				06B247C22BB2631C001C9F6B /* 搜索旋转排序数组.swift in Sources */,
				0616ECA42BB57BA600D35872 /* 合并区间.swift in Sources */,
				06250BD82D54C9690015A222 /* 单链表的分解.swift in Sources */,
				0616F4E02BB7B258005791F0 /* 寻找两个正序数组的中位数.swift in Sources */,
				0616F4DE2BB455B6005791F0 /* 三数之和.swift in Sources */,
				06DE18ED2D7597200046EF2C /* 通过前序和后续构建二叉树.swift in Sources */,
				06DE18E92D755D5B0046EF2C /* 通过前序以及中序构建二叉树.swift in Sources */,
				0689BAAC2D40FB380056013F /* 数组增删改查O(1).swift in Sources */,
				0616F4D82BB4470F005791F0 /* 岛屿数量.swift in Sources */,
				0616EC9C2BB51D5900D35872 /* 最长递增子序列-动态规划.swift in Sources */,
				0616ECAC2BB6605100D35872 /* 复原IP地址.swift in Sources */,
				0616F4EC2BB90479005791F0 /* 括号生成.swift in Sources */,
				06FC2D892BB3D05B00B15E28 /* 全排列.swift in Sources */,
				0606B7DD2D6E0BDA00FE9548 /* 存在重复元素3.swift in Sources */,
				0616F4E22BB822EA005791F0 /* 下一个排列.swift in Sources */,
				06226A9D2BBC0ED400C2F716 /* 字母异位词分组.swift in Sources */,
				0616EC8B2BB42CB600D35872 /* 螺旋矩阵.swift in Sources */,
				06FC2D832BB3B7F900B15E28 /* 有效的括号.swift in Sources */,
				06FE357C2D5A434A00ABB1E8 /* 删除有序数组中的重复项.swift in Sources */,
				068B6E6E2BBAC5CD00404599 /* Z字形变换.swift in Sources */,
				06A6C5F52BB2F61100BDDB53 /* 最长不重复子串.swift in Sources */,
				06226A9F2BBC152200C2F716 /* 跳跃游戏.swift in Sources */,
				0616EC9E2BB55B7B00D35872 /* 接雨水.swift in Sources */,
				06C6C2982BB15B680069AF70 /* TwoSum.swift in Sources */,
				066DB9712D9148A90003BACC /* 临时算法文件.swift in Sources */,
				06A70EEA2D94FB1400C13B60 /* 二叉树镜像.swift in Sources */,
				06FC2D8B2BB3F7AB00B15E28 /* 二叉树的锯齿形层序遍历.swift in Sources */,
				0619DFB22D84174600075E8D /* 完全平方数.swift in Sources */,
				0616EC942BB501B200D35872 /* 反转链表.swift in Sources */,
				06EDAA3D2BAC190100BCC224 /* Sort.swift in Sources */,
				06250BDD2D55E74B0015A222 /* 从未排序的链表中移除重复元素.swift in Sources */,
				06A70EE82D94F5B500C13B60 /* 对称二叉树.swift in Sources */,
				06DE18EB2D7589440046EF2C /* 通过中序和后续构建二叉树.swift in Sources */,
				06B247C02BB1A786001C9F6B /* TreeLevelOrder.swift in Sources */,
				06171DA22D7AA31D000910ED /* 排序练习.swift in Sources */,
				06C6C29A2BB16DE90069AF70 /* 最长回文子串.swift in Sources */,
				06F2F1662BB6BF7100B6D830 /* 二分查找.swift in Sources */,
				06226A952BBBF32D00C2F716 /* 正则表达式匹配.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		06EDAA372BABC74900BCC224 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 13.3;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		06EDAA382BABC74900BCC224 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 13.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		06EDAA3A2BABC74900BCC224 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				MACOSX_DEPLOYMENT_TARGET = 11.0;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		06EDAA3B2BABC74900BCC224 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				MACOSX_DEPLOYMENT_TARGET = 11.0;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		06EDAA2D2BABC74900BCC224 /* Build configuration list for PBXProject "testMacOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				06EDAA372BABC74900BCC224 /* Debug */,
				06EDAA382BABC74900BCC224 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		06EDAA392BABC74900BCC224 /* Build configuration list for PBXNativeTarget "testMacOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				06EDAA3A2BABC74900BCC224 /* Debug */,
				06EDAA3B2BABC74900BCC224 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 06EDAA2A2BABC74900BCC224 /* Project object */;
}
